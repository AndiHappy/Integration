
#修改日志的级别，默认root是info
logging.level.root=trance


# 在控制台输出的日志的格式
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n


# 不指定路径在当前项目下生成springboot.log日志
#logging.file=springboot.log

# 在当前磁盘的根路径下创建spring文件夹和里面的log文件夹；使用spring.log 作为默认文件
#logging.file.path=/spring/log

# 指定文件中日志输出的格式
#logging.pattern.file=%d{yyyy-MM-dd} === [%thread] === %-5level === %logger{50} ==== %msg%n

#Enable template caching.
spring.thymeleaf.cache=true

# Check that the template exists before rendering it.
spring.thymeleaf.check-template=true

# Check that the templates location exists.
spring.thymeleaf.check-template-location=true

# Enable Thymeleaf view resolution for Web frameworks.
spring.thymeleaf.enabled=true

# Template files encoding.
spring.thymeleaf.encoding=UTF-8

# Comma-separated list of view names that should be excluded from resolution.
spring.thymeleaf.excluded-view-names=

# Template mode to be applied to templates. See also StandardTemplateModeHandlers.
spring.thymeleaf.mode=HTML5

# Prefix that gets prepended to view names when building a URL.
spring.thymeleaf.prefix=classpath:/templates/

# Maximum size of data buffers used for writing to the response, in bytes.
spring.thymeleaf.reactive.max-chunk-size= 50000

# Media types supported by the view technology.
#spring.thymeleaf.reactive.media-types=

# Content-Type value written to HTTP responses.
spring.thymeleaf.servlet.content-type=text/html

# Suffix that gets appended to view names when building a URL.
spring.thymeleaf.suffix=.html

# Order of the template resolver in the chain.
#spring.thymeleaf.template-resolver-order=

# Comma-separated list of view names that can be resolved.
#spring.thymeleaf.view-names=


######################### mongoDB ###################################
spring.data.mongodb.host=127.0.0.1
spring.data.mongodb.database=gateway
spring.data.mongodb.port=27017
spring.data.mongodb.username=user1
spring.data.mongodb.password=user1


